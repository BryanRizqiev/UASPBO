package main.panel;

import main.utility.JDBCUtil;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class PanelPelanggan extends javax.swing.JPanel {

    /**
     * Creates new form PanelPelanggan
     */
    public PanelPelanggan() {
        initComponents();
        tampilData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_group = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        lb_nama = new javax.swing.JLabel();
        txt_nama = new javax.swing.JTextField();
        lb_telephone = new javax.swing.JLabel();
        txt_telephone = new javax.swing.JTextField();
        lb_kelamin = new javax.swing.JLabel();
        btn_laki = new javax.swing.JRadioButton();
        btn_perempuan = new javax.swing.JRadioButton();
        lb_alamat = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_alamat = new javax.swing.JTextArea();
        btn_simpan = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_reset = new javax.swing.JButton();
        txt_cari = new javax.swing.JTextField();
        btn_cari = new javax.swing.JButton();
        btn_ubah = new javax.swing.JButton();
        btn_keluar = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("DATA PELANGGAN");

        lb_nama.setText("Nama Pelanggan");

        txt_nama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_namaKeyPressed(evt);
            }
        });

        lb_telephone.setText("No Telephone");

        txt_telephone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_telephoneKeyTyped(evt);
            }
        });

        lb_kelamin.setText("Jenis Kelamin");

        btn_group.add(btn_laki);
        btn_laki.setSelected(true);
        btn_laki.setText("Laki-Laki");
        btn_laki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lakiActionPerformed(evt);
            }
        });

        btn_group.add(btn_perempuan);
        btn_perempuan.setText("Perempuan");

        lb_alamat.setText("Alamat");

        txt_alamat.setColumns(20);
        txt_alamat.setRows(5);
        jScrollPane1.setViewportView(txt_alamat);

        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Pelanggan", "Nama Pelanggan", "No Telepon", "Jenis Kelamin", "Alamat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);

        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        btn_cari.setText("Cari");
        btn_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cariActionPerformed(evt);
            }
        });

        btn_ubah.setText("Ubah");
        btn_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubahActionPerformed(evt);
            }
        });

        btn_keluar.setText("Keluar");
        btn_keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_keluarActionPerformed(evt);
            }
        });

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_simpan)
                        .addGap(18, 18, 18)
                        .addComponent(btn_ubah)
                        .addGap(18, 18, 18)
                        .addComponent(btn_hapus)
                        .addGap(18, 18, 18)
                        .addComponent(btn_reset)
                        .addGap(18, 18, 18)
                        .addComponent(btn_keluar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_kelamin)
                            .addComponent(lb_alamat)
                            .addComponent(lb_nama)
                            .addComponent(lb_telephone)
                            .addComponent(txt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_laki)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_perempuan))
                            .addComponent(txt_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_nama)
                    .addComponent(txt_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_telephone)
                    .addComponent(txt_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_kelamin)
                    .addComponent(btn_laki)
                    .addComponent(btn_perempuan))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_alamat)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cari))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_simpan)
                    .addComponent(btn_ubah)
                    .addComponent(btn_hapus)
                    .addComponent(btn_reset)
                    .addComponent(btn_keluar))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txt_namaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_namaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == '\n') {
            txt_alamat.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_nama.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txt_alamat.requestFocus();
        }
    }//GEN-LAST:event_txt_namaKeyPressed

    private void txt_telephoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_telephoneKeyTyped
        // TODO add your handling code here:
        if (Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Pada Kolom Jumlah Hanya Bisa Memasukan Karakter Angka");
        }
    }//GEN-LAST:event_txt_telephoneKeyTyped

    private void btn_lakiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lakiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_lakiActionPerformed

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed

        try {
            String nama = txt_nama.getText(),
                    notelp = txt_telephone.getText(),
                    alamat = txt_alamat.getText();

            if (nama.isEmpty() || notelp.isEmpty() || alamat.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Isi semua form");
            }

            String jenis = null;
            if (btn_laki.isSelected()) {
                jenis = "Laki-Laki";
            } else if (btn_perempuan.isSelected()) {
                jenis = "Perempuan";
            }
            String sql = "INSERT INTO pelanggan (nama, no_telepon, jenis_kelamin, alamat) VALUES (?, ?, ?, ?)";
            Connection conn = JDBCUtil.getConnection();
            PreparedStatement pstm = conn.prepareStatement(sql);
            pstm.setString(1, txt_nama.getText());
            pstm.setString(2, txt_telephone.getText());
            pstm.setString(3, jenis);
            pstm.setString(4, txt_alamat.getText());

            int isInserted = pstm.executeUpdate();
            //Jika berhasil maka akan menghasilkan output bernilai 1

            if (isInserted > 0) {
                JOptionPane.showMessageDialog(this, "Proses Simpan Data Berhasil..");
            } else {
                JOptionPane.showMessageDialog(this, "Proses Simpan Data Gagal..");
            }

            pstm.close();
            conn.close();
            btn_resetActionPerformed(evt);

            tampilData();

//            txt_nama.requestFocus();
        } catch (SQLException ex) {
            Logger.getLogger(PanelPelanggan.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btn_simpanActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        txt_nama.setText("");
        txt_telephone.setText("");
        btn_laki.setSelected(true);
        txt_alamat.setText("");
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cariActionPerformed

        try {
            String id = txt_cari.getText();
            if (id.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Isi form");
                return;
            }

            Connection conn = JDBCUtil.getConnection();
            PreparedStatement pstm = conn.prepareStatement("SELECT * FROM pelanggan WHERE id = ?");
            pstm.setInt(1, Integer.parseInt(id));

            ResultSet res = pstm.executeQuery();

            if (res.next()) {
                JOptionPane.showMessageDialog(this, "Data ditemukan");
                txt_nama.setText(res.getString("nama"));
                txt_telephone.setText(res.getString("no_telepon"));

                if (res.getString("jenis_kelamin").equals("Laki-laki")) {
                    btn_laki.setSelected(true);
                } else {
                    btn_perempuan.setSelected(true);
                }
                txt_alamat.setText(res.getString("alamat"));
            } else {
                JOptionPane.showMessageDialog(this, "Data tidak ditemukan");
            }

            res.close(); pstm.close(); conn.close();

        } catch (SQLException ex) {
            Logger.getLogger(PanelPelanggan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_cariActionPerformed

    private void btn_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubahActionPerformed
        try {
            String id = txt_cari.getText();
            if (id.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tidak ada data yang akan diubah");
                return;
            }

            String nama = txt_nama.getText(),
                    notelp = txt_telephone.getText(),
                    alamat = txt_alamat.getText();

            if (nama.isEmpty() || notelp.isEmpty() || alamat.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Isi semua form");
            }

            String jenis = null;
            if (btn_laki.isSelected()) {
                jenis = "Laki-Laki";
            } else if (btn_perempuan.isSelected()) {
                jenis = "Perempuan";
            }

            int dataUpdate = JOptionPane.showConfirmDialog(this, "Apakah anda yakin?", "Ubah Data", 2);
            //optionType 2 maksudnya hanya menampilkan opsi yes dan cancel
            if (dataUpdate == JOptionPane.YES_OPTION) {
                Connection conn = JDBCUtil.getConnection();
                PreparedStatement pstm = conn.prepareStatement("UPDATE pelanggan SET nama = ?, no_telepon = ?, jenis_kelamin = ?, alamat = ? WHERE id = ?");
                pstm.setString(1, nama);
                pstm.setString(2, notelp);
                pstm.setString(3, jenis);
                pstm.setString(4, alamat);
                pstm.setInt(5, Integer.parseInt(id));

                int isUpdated = pstm.executeUpdate();

                if (isUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil diubah");
                } else {
                    JOptionPane.showMessageDialog(this, "Data gagal diubah");
                }

                tampilData();
                btn_resetActionPerformed(evt);

                pstm.close();
                conn.close();

            } else {
                JOptionPane.showMessageDialog(this, "Data tidak diubah");
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelPelanggan.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btn_ubahActionPerformed

    private void btn_keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_keluarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_keluarActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        try {
            String id = txt_cari.getText();
            if (id.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tidak ada data yang akan dihapus");
                return;
            }

            int dataUpdate = JOptionPane.showConfirmDialog(this, "Apakah anda yakin?", "Ubah Data", 2);
            //optionType 2 maksudnya hanya menampilkan opsi yes dan cancel
            if (dataUpdate == JOptionPane.YES_OPTION) {
                Connection conn = JDBCUtil.getConnection();
                PreparedStatement pstm = conn.prepareStatement("DELETE FROM pelanggan WHERE id = ?");
                pstm.setInt(1, Integer.parseInt(id));

                int isDeleted = pstm.executeUpdate();

                if (isDeleted > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                } else {
                    JOptionPane.showMessageDialog(this, "Data gagal dihapus");
                }

                tampilData();
                btn_resetActionPerformed(evt);

                pstm.close();
                conn.close();

            } else {
                JOptionPane.showMessageDialog(this, "Data tidak dihapus");
            }

        } catch (SQLException ex) {
            Logger.getLogger(PanelPelanggan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_hapusActionPerformed

    public void tampilData() {
        try {
            DefaultTableModel dataModel = (DefaultTableModel) jTable1.getModel();
            dataModel.setRowCount(0);

            Connection conn = JDBCUtil.getConnection();
            PreparedStatement pstm = conn.prepareStatement("SELECT * FROM pelanggan");
            ResultSet res = pstm.executeQuery();

            while (res.next()) {
                dataModel.addRow(new Object[]{res.getInt("id"), res.getString("nama"), res.getString("no_telepon"), res.getString("jenis_kelamin"), res.getString("alamat")});

            }

            res.close();
            pstm.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(PanelPelanggan.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cari;
    private javax.swing.ButtonGroup btn_group;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_keluar;
    private javax.swing.JRadioButton btn_laki;
    private javax.swing.JRadioButton btn_perempuan;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_simpan;
    private javax.swing.JButton btn_ubah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lb_alamat;
    private javax.swing.JLabel lb_kelamin;
    private javax.swing.JLabel lb_nama;
    private javax.swing.JLabel lb_telephone;
    private javax.swing.JTextArea txt_alamat;
    private javax.swing.JTextField txt_cari;
    private javax.swing.JTextField txt_nama;
    private javax.swing.JTextField txt_telephone;
    // End of variables declaration//GEN-END:variables
}
