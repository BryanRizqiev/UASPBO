/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main.panel;

import main.frame.MainUI;
import main.utility.JDBCUtil;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.sql.*;

/**
 *
 * @author bryan
 */
public class PanelPendataanBarang extends javax.swing.JPanel {

    private MainUI mainFrame;
    private Connection conn;
    private PreparedStatement stmnt;

    private void updateTable() {
        DefaultTableModel tabel = (DefaultTableModel) jTable1.getModel();
        tabel.setRowCount(0);
        try {
            conn = JDBCUtil.getConnection();
            stmnt = conn.prepareStatement("SELECT * FROM barang;");
            ResultSet rs = stmnt.executeQuery();

            while (rs.next()) {
                int id = rs.getInt("id");
                String brand = rs.getString("brand");
                String typenVarian = rs.getString("type_and_variant");
                String color = rs.getString("color");
                int stock = rs.getInt("stock");
                int price = rs.getInt("price_out");
                tabel.addRow( new Object[] {id, brand, typenVarian, color, stock, price});
            }

            rs.close(); stmnt.close(); conn.close();

        } catch (SQLException exc) {
            exc.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error");
        }
    }

    private void showJOptionToInMainPanel(Object message) {
        JOptionPane.showMessageDialog(this, message);
    }

    /**
     * Creates new form PanelPendataanBarang
     */
    public PanelPendataanBarang(MainUI mainFrame) {
        initComponents();
        updateTable();
        this.mainFrame = mainFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        menuItemAdakan = new javax.swing.JMenuItem();
        menuItemEdit = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tfId = new javax.swing.JTextField();
        tfMerek = new javax.swing.JTextField();
        tfTipenVarian = new javax.swing.JTextField();
        combBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        tfWarna = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfHarga = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        labelStok = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSync = new javax.swing.JButton();

        menuItemAdakan.setText("Adakan");
        menuItemAdakan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAdakanActionPerformed(evt);
            }
        });
        jPopupMenu1.add(menuItemAdakan);

        menuItemEdit.setText("Lihat");
        menuItemEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEditActionPerformed(evt);
            }
        });
        jPopupMenu1.add(menuItemEdit);

        setPreferredSize(new java.awt.Dimension(600, 600));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel1.setText("Pendataan Produk");

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        jLabel2.setText("Id produk :");

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        jLabel3.setText("Merek :");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        jLabel4.setText("Tipe dan varian :");

        tfId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfIdKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfIdKeyTyped(evt);
            }
        });

        tfMerek.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfMerekKeyPressed(evt);
            }
        });

        tfTipenVarian.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfTipenVarianKeyPressed(evt);
            }
        });

        combBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cari", "Hapus" }));
        combBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combBox1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        jLabel5.setText("Stok :");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        jLabel6.setText("Warna : ");

        tfWarna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfWarnaKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        jLabel7.setText("Harga jual :");

        tfHarga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfHargaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfHargaKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 2, 15)); // NOI18N
        jLabel8.setText("(1 Juta diwakili 1000)");
        jLabel8.setPreferredSize(new java.awt.Dimension(135, 35));

        labelStok.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Brand", "Tipe & Varian", "Warna", "Stok", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        btnSync.setText("Singkronkan");
        btnSync.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSyncActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(combBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSimpan)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdate)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnReset)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSync))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(tfHarga, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(tfWarna, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfTipenVarian, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfMerek, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(31, 31, 31)
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labelStok))
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelStok, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfMerek, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTipenVarian, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfWarna, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSync, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        try {
            String brand = tfMerek.getText();

            if (brand.isEmpty() || tfTipenVarian.getText().isEmpty() || tfWarna.getText().isEmpty() || tfHarga.getText().isEmpty() ) {
                JOptionPane.showMessageDialog(this, "4 Form diatas harus diisi");
                return;
            }

            String uniqueName = (brand + tfTipenVarian.getText() + tfWarna.getText()).toLowerCase();

            String[] returned = {"id"};
            conn = JDBCUtil.getConnection();

            stmnt = conn.prepareStatement("INSERT INTO barang (brand, unique_name, type_and_variant, color, price_out) " +
                    "VALUES (?, ?, ?, ?, ?);", returned);
            stmnt.setString(1, brand);
            stmnt.setString(2, uniqueName);
            stmnt.setString(3, tfTipenVarian.getText());
            stmnt.setString(4, tfWarna.getText());
            stmnt.setInt(5, Integer.parseInt(tfHarga.getText()) * 1000);

            int affected = stmnt.executeUpdate();
            if (affected < 1) {
                JOptionPane.showMessageDialog(this, "Data tidak ter-insert");
            } else {
                ResultSet rs = stmnt.getGeneratedKeys();
                if (rs.next()) {
                    // harus by column index
                    JOptionPane.showMessageDialog(this, "Data berhasil di-insert dengan id: " + rs.getInt(1));
                    updateTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Data berhasil di-insert");
                    updateTable();
                }
                rs.close();
            }

            stmnt.close(); conn.close();

            tfMerek.setText(""); tfTipenVarian.setText(""); tfWarna.setText(""); tfHarga.setText("");
        } catch (SQLException exc) {
            exc.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error");
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void combBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combBox1ActionPerformed
        if (combBox1.getSelectedItem().equals("Cari")) {

            if (tfId.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Form id harus diisi");
                return;
            }

            try {
                conn = JDBCUtil.getConnection();
                stmnt = conn.prepareStatement("SELECT * FROM barang WHERE id = ?;");
                stmnt.setInt(1, Integer.parseInt(tfId.getText()));
                ResultSet rs = stmnt.executeQuery();

                if (rs.next()) {
                    labelStok.setText(String.valueOf(rs.getInt("stock")));
                    tfMerek.setText(rs.getString("brand"));
                    tfTipenVarian.setText(rs.getString("type_and_variant"));
                    tfWarna.setText(rs.getString("color"));
                    tfHarga.setText(String.valueOf(rs.getInt("price_out") / 1000));
                } else {
                    JOptionPane.showMessageDialog(this, "Data tidak ditemukan");
                }

                rs.close(); stmnt.close(); conn.close();

            } catch (SQLException exc) {
                exc.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error");
            }
        } else if (combBox1.getSelectedItem().equals("Hapus")) {

            if (tfId.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Form id harus diisi");
                return;
            }

            try {
                conn = JDBCUtil.getConnection();
                stmnt = conn.prepareStatement("DELETE FROM barang WHERE id = ?;");
                stmnt.setInt(1, Integer.parseInt(tfId.getText()));
                int affected = stmnt.executeUpdate();

                stmnt.close(); conn.close();

                if (affected < 0) {
                    JOptionPane.showMessageDialog(this, "Data tidak ter-uptdate");
                    return;
                }

                JOptionPane.showMessageDialog(this, "Data ter-hapus");

                updateTable();
            } catch (SQLException exc) {
                exc.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error");
            }
        }
    }//GEN-LAST:event_combBox1ActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String brand = tfMerek.getText();

        if (brand.isEmpty() || tfId.getText().isEmpty() || tfTipenVarian.getText().isEmpty() || tfWarna.getText().isEmpty() || tfHarga.getText().isEmpty() ) {
            JOptionPane.showMessageDialog(this, "5 Form diatas harus diisi");
            return;
        }

        String uniqueName = (brand + tfTipenVarian.getText() + tfWarna.getText()).toLowerCase();

        try {
            conn = JDBCUtil.getConnection();
            stmnt = conn.prepareStatement("UPDATE barang SET unique_name =  ?, brand = ?, type_and_variant = ?, color = ?, price_out = ? WHERE id = ?");
            stmnt.setString(1, uniqueName);
            stmnt.setString(2, brand);
            stmnt.setString(3, tfTipenVarian.getText());
            stmnt.setString(4, tfWarna.getText());
            stmnt.setInt(5, Integer.parseInt(tfHarga.getText()) * 1000);
            stmnt.setInt(6, Integer.parseInt(tfId.getText()));
            int affected = stmnt.executeUpdate();

            stmnt.close(); conn.close();

            if (affected < 0) {
                JOptionPane.showMessageDialog(this, "Data tidak ter-uptdate");
                return;
            }

            JOptionPane.showMessageDialog(this, "Data ter-update");

            updateTable();
        } catch (SQLException exc) {
            exc.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        tfId.setText(""); tfMerek.setText(""); tfTipenVarian.setText(""); tfWarna.setText(""); tfHarga.setText(""); labelStok.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void tfHargaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfHargaKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_tfHargaKeyTyped

    private void tfMerekKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMerekKeyPressed
        if (evt.getKeyChar() == '\n') {
            tfTipenVarian.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            tfId.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            tfTipenVarian.requestFocus();
        }
    }//GEN-LAST:event_tfMerekKeyPressed

    private void tfIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIdKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            tfMerek.requestFocus();
        }
    }//GEN-LAST:event_tfIdKeyPressed

    private void tfTipenVarianKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTipenVarianKeyPressed
        if (evt.getKeyChar() == '\n') {
            tfWarna.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            tfMerek.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            tfWarna.requestFocus();
        }
    }//GEN-LAST:event_tfTipenVarianKeyPressed

    private void tfWarnaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfWarnaKeyPressed
        if (evt.getKeyChar() == '\n') {
            tfHarga.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            tfTipenVarian.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            tfHarga.requestFocus();
        }
    }//GEN-LAST:event_tfWarnaKeyPressed

    private void tfHargaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfHargaKeyPressed
        if (evt.getKeyChar() == '\n') {
            btnSimpanActionPerformed(null);
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            tfWarna.requestFocus();
        }
    }//GEN-LAST:event_tfHargaKeyPressed

    private void btnSyncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSyncActionPerformed
        btnSync.setEnabled(false);
        btnSync.setBorderPainted(false);
        btnSync.setFocusPainted(false);
        SwingWorker<Boolean, Boolean> worker = new SwingWorker<>() {
            // harus di catch SQLException
            @Override
            protected Boolean doInBackground() throws SQLException, InterruptedException {
                System.out.println("Lama bgt");
                Thread.sleep(5000L);
                conn = JDBCUtil.getConnection();
                stmnt = conn.prepareStatement("UPDATE barang brg SET stock = " +
                        "(SELECT IFNULL(SUM(stock), 0) FROM pengadaan_barang WHERE barang_id = brg.id);");
                int affected = stmnt.executeUpdate();
                // kurang guna karena query atas pasti update
                if (affected < 1) {
                    mainFrame.showJOptionToMainFrame("Data tidak ada yang update");
                }

                stmnt.close(); conn.close();
                System.out.println("Lama bgt");

                return true;
            }

            @Override
            protected void done() {
                boolean bStatus = false;
                try {
                    bStatus = get();
                } catch (Exception exc) {
                    exc.printStackTrace();
                    showJOptionToInMainPanel("Error");
                }
                System.out.println("Is ok? " + bStatus);
                mainFrame.showJOptionToMainFrame("Data berhasil ter-update");
//                showJOptionToInMainPanel("Data berhasil ter-update");
                btnSync.setEnabled(true);
                btnSync.setBorderPainted(true);
                btnSync.setFocusPainted(true);
                updateTable();
            }
        };

        worker.execute();
    }//GEN-LAST:event_btnSyncActionPerformed

    private void tfIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIdKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_tfIdKeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3) {
            int row = jTable1.rowAtPoint(evt.getPoint());
            jTable1.setRowSelectionInterval(row, row);
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void menuItemAdakanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAdakanActionPerformed
        int row = jTable1.getSelectedRow();
        int id = (int) jTable1.getValueAt(row, 0);
        mainFrame.setPanel(new PanelPengadaanBarang(mainFrame, id));
    }//GEN-LAST:event_menuItemAdakanActionPerformed

    private void menuItemEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEditActionPerformed
        int row = jTable1.getSelectedRow();

        int id = (int) jTable1.getValueAt(row, 0);
        String brand = (String) jTable1.getValueAt(row, 1);
        String typeNVariant = (String) jTable1.getValueAt(row, 2);
        String color = (String) jTable1.getValueAt(row, 3);
        int harga = (int) jTable1.getValueAt(row, 5);

        tfId.setText(String.valueOf(id)); tfMerek.setText(brand); tfTipenVarian.setText(typeNVariant); tfWarna.setText(color); tfHarga.setText(String.valueOf(harga / 1000));
    }//GEN-LAST:event_menuItemEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnSync;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> combBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelStok;
    private javax.swing.JMenuItem menuItemAdakan;
    private javax.swing.JMenuItem menuItemEdit;
    private javax.swing.JTextField tfHarga;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfMerek;
    private javax.swing.JTextField tfTipenVarian;
    private javax.swing.JTextField tfWarna;
    // End of variables declaration//GEN-END:variables
}
